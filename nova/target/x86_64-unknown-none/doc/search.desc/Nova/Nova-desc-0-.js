searchState.loadedDescShard("Nova", 0, "Nova\nCommon Utilities for use throughout Nova\nThe Kernel Console\nHardware Abstraction Layer\nKernel Logging Macros\nThis is the entry point for the kernel. The <code>main</code> function …\nInput/Output Traits and Blanket Implementations\nKernel Terminals\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFirmware Interface Modules\nInstruction Set Architecture (ISA) Interface\nUniversal Asynchronous Receiver/Transmitter (UART) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n! # Interface for ISA specific initialization\nPerform ISA specific deinitialization\nPerform ISA specific initialization\nThe Global Descriptor Table for the BSP. The GDT is used …\nThe BSP stack for the kernel. DO NOT TOUCH THIS, IT IS …\nThe BSP stack size is 4 pages by default.\nThe Task State Segment for the BSP. In long mode, the TSS …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")